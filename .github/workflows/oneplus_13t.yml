name: OnePlus_13T
on:
  workflow_dispatch:
    inputs:
      enable_feature_change_suffix:
        description: "是否启用内核名称修改"
        required: false
        default: false
        type: boolean
      KERNEL_SUFFIX:
        description: '内核名称修改(可改中文和emoji)'
        required: true
        default: '-android15-8-gd43086512890-abogki423825152-4k'
      enable_feature_change_build_time:
        description: "是否启用内核名称修改"
        required: false
        default: false
        type: boolean
      KERNEL_TIME:
        description: "内核构建日期更改(默认为原厂)"
        required: true
        default: 'Tue Jun 10 12:12:23 UTC 2025'
      enable_feature_kpm:
        description: "是否启用kpm"
        required: false
        default: false
        type: boolean
      enable_feature_lz4k_oplus:
        description: "是否启用lz4k_oplus"
        required: false
        default: true
        type: boolean
      enable_feature_lz4kd:
        description: "是否启用lz4kd"
        required: false
        default: true
        type: boolean
      enable_feature_sched_ext:
        description: "是否添加风驰驱动"
        required: false
        default: true
        type: boolean
      
#  schedule:
#    - cron: '0 22 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
      CCACHE_DIR: /home/runner/.ccache  
      CCACHE_MAXSIZE: 8G
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'

      - uses: actions/checkout@v5

      - name: Configure Git
        run: |
         git config --global user.name ${{ github.actor }}
         git config --global user.email ${{ secrets.USER_EMAIL }}

      - name: Install dependencies
        run: sudo apt update && sudo apt install -y python3 git curl ccache zip libelf-dev

#      - name: Compare Version
#        run: |
#          git clone --depth=1 https://github.com/SukiSU-Ultra/SukiSU-Ultra.git -b susfs-main SUKI/
#          cd SUKI
#          KSU_GIT_VERSION=$(git rev-list --count HEAD)
#          KSU_VERSION=$((10000 + KSU_GIT_VERSION + 700))
#          LATEST_TAG=$(git ls-remote --tags https://github.com/MerCuJerry/oneplus_sm8750_sukisu.git | tail -n1 | sed 's/.*\///')
#          if [ $LATEST_TAG -eq $KSU_VERSION ];then exit 1;fi

      - name: Restore ccache
        uses: actions/cache@v4
        with:
          path: /home/runner/.ccache
          key: ccache-${{ runner.os }}-${{ github.ref }}
          restore-keys: |
            ccache-${{ runner.os }}-

      - name: Install repo tool
        run: |
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod a+x ~/repo
          sudo mv ~/repo /usr/local/bin/repo

      - name: Initialize repo and sync
        run: |
          mkdir kernel_workspace && cd kernel_workspace
          repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b refs/heads/oneplus/sm8750 -m oneplus_13t.xml --depth=1
          repo --trace sync -c -j$(nproc --all) --no-tags
          rm kernel_platform/common/android/abi_gki_protected_exports_* || echo "No protected exports!"
          rm kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"
            
      - name: Set up SukiSU
        run: |
          echo DATE=$(date +%F) >> $GITHUB_ENV
          cd kernel_workspace/kernel_platform
          curl -LSs "https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/main/kernel/setup.sh" | bash -s susfs-main
          cd ./KernelSU
          export KSU_VERSION=$(expr $(/usr/bin/git rev-list --count main) "+" 10700)
          echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
          sed -i "s/DKSU_VERSION=12800/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile
      
      - name: Pull SukiSU_Patch and susfs4ksu
        run: |
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-android15-6.6 --depth=1
          git clone https://github.com/SukiSU-Ultra/SukiSU_patch.git --depth=1

      - name: Set up susfs
        working-directory: ./kernel_workspace/kernel_platform/common
        run: |
          cp $GITHUB_WORKSPACE/susfs4ksu/kernel_patches/50_add_susfs_in_gki-android15-6.6.patch ./
          cp $GITHUB_WORKSPACE/susfs4ksu/kernel_patches/fs/* ./fs/
          cp $GITHUB_WORKSPACE/susfs4ksu/kernel_patches/include/linux/* ./include/linux/
          # Apply patches

          patch -p1 < 50_add_susfs_in_gki-android15-6.6.patch
          cp $GITHUB_WORKSPACE/SukiSU_patch/hooks/syscall_hooks.patch ./
          patch -p1 -F 3 < syscall_hooks.patch
          echo "Done"
      
      - name: Apply HMBird GKI patch
        working-directory: ./kernel_workspace/kernel_platform/common/drivers
        run: |
          cp $GITHUB_WORKSPACE/hmbird_patch.c ./
          if ! grep -q "hmbird_patch.o" Makefile; then
          echo "obj-y += hmbird_patch.o" >> Makefile
          fi
          cd ../../../
          git add -A
          git commit -m "Add HMBird GKI patch" || true

      - name: Update lz4
        working-directory: ./kernel_workspace/kernel_platform/common
        run: |
          cp $GITHUB_WORKSPACE/SukiSU_patch/other/other/0001-lz4-Update-to-version-1.9.4.patch ./
          patch -p1 -F 3 < 0001-lz4-Update-to-version-1.9.4.patch
            
      - name: Apply lz4kd Patch
        if: ${{ inputs.enable_feature_lz4kd }}
        working-directory: ./kernel_workspace/kernel_platform/common
        run: |
          #lz4k
          cp -r $GITHUB_WORKSPACE/SukiSU_patch/other/zram/lz4k/include/linux/* ./include/linux
          cp -r $GITHUB_WORKSPACE/SukiSU_patch/other/zram/lz4k/lib/* ./lib
          cp -r $GITHUB_WORKSPACE/SukiSU_patch/other/zram/lz4k/crypto/* ./crypto
          cp $GITHUB_WORKSPACE/SukiSU_patch/other/zram/zram_patch/6.6/lz4kd.patch ./
          patch -p1 -F 3 < lz4kd.patch

      - name: Apply lz4k_oplus Patch
        if: ${{ inputs.enable_feature_lz4k_oplus }}
        working-directory: ./kernel_workspace/kernel_platform/common
        run: |
          #lz4k_oplus
          cp -r $GITHUB_WORKSPACE/SukiSU_patch/other/zram/lz4k_oplus ./lib/
          cp $GITHUB_WORKSPACE/SukiSU_patch/other/zram/zram_patch/6.6/lz4k_oplus.patch ./
          patch -p1 -F 3 < lz4k_oplus.patch

      - name: Add KPM Configuration Settings
        if: ${{ inputs.enable_feature_kpm }}
        working-directory: ./kernel_workspace/kernel_platform/common/arch/arm64/configs
        run: echo "CONFIG_KPM=y" >> ./gki_defconfig

      - name: Add SUSFS Configuration Settings
        working-directory: ./kernel_workspace/kernel_platform/common/arch/arm64/configs
        run: |
          echo "CONFIG_KSU=y" >> ./gki_defconfig

          # Add VFS configuration settings
          echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> ./gki_defconfig
          echo "CONFIG_KSU_MANUAL_HOOK=y" >> ./gki_defconfig
          
          # Add SUSFS configuration settings
          echo "CONFIG_KSU_SUSFS=y" >> ./gki_defconfig
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> ./gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> ./gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n" >> ./gki_defconfig
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./gki_defconfig
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./gki_defconfig
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./gki_defconfig
          echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./gki_defconfig
          
          echo "CONFIG_CRYPTO_LZ4HC=y" >> ./gki_defconfig
          echo "CONFIG_CRYPTO_LZ4K=y" >> ./gki_defconfig
          echo "CONFIG_CRYPTO_LZ4KD=y" >> ./gki_defconfig
          echo "CONFIG_CRYPTO_842=y" >> ./gki_defconfig
          echo "CONFIG_LOCALVERSION_AUTO=n" >> ./gki_defconfig

          # Add BBR
          echo "CONFIG_TCP_CONG_ADVANCED=y" >> ./gki_defconfig
          echo "CONFIG_TCP_CONG_BBR=y" >> ./gki_defconfig
          echo "CONFIG_NET_SCH_FQ=y" >> ./gki_defconfig
          echo "CONFIG_TCP_CONG_BIC=n" >> ./gki_defconfig
          echo "CONFIG_TCP_CONG_CUBIC=n" >> ./gki_defconfig
          echo "CONFIG_TCP_CONG_WESTWOOD=n" >> ./gki_defconfig
          echo "CONFIG_TCP_CONG_HTCP=n" >> ./gki_defconfig
          echo "CONFIG_DEFAULT_TCP_CONG=bbr" >> ./gki_defconfig
        
      - name: Remove check_defconfig
        working-directory: ./kernel_workspace/kernel_platform/common
        run: |
          sudo sed -i 's/check_defconfig//' ./build.config.gki
          git add -A && git commit -a -m "BUILD Kernel"

      - name: Change Kernel suffix
        if: ${{ inputs.enable_feature_change_suffix }}
        working-directory: ./kernel_workspace/kernel_platform
        run: |
          sed -i 's/${scm_version}//' ./common/scripts/setlocalversion
          sudo sed -i 's/-4k/${{ github.event.inputs.KERNEL_SUFFIX }}/g' ./common/arch/arm64/configs/gki_defconfig

      - name: Add sched_ext
        if: ${{ inputs.enable_feature_sched_ext }}
        working-directory: ./kernel_workspace/kernel_platform
        run: |
          git clone https://github.com/HanKuCha/sched_ext.git
          rm -rf ./sched_ext/.git
          cp -r ./sched_ext/* ./common/kernel/sched

      - name: Setting Timestamp
        if: ${{ !inputs.enable_feature_change_build_time }}
        run: echo "TIMESTAMP=$(date)" >> $GITHUB_ENV
      
      - name: Setting Changed Timestamp
        if: ${{ inputs.enable_feature_change_build_time }}
        run: echo "TIMESTAMP=${{ github.event.inputs.KERNEL_TIME }}" >> $GITHUB_ENV

      - name: Build Kernel
        working-directory: ./kernel_workspace/kernel_platform/common
        env:
            KBUILD_BUILD_TIMESTAMP: ${{ env.TIMESTAMP }}
            args: |+
                LLVM=1 ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- CC=clang
                RUSTC=$GITHUB_WORKSPACE/kernel_workspace/prebuilts/rust/linux-x86/1.73.0b/bin/rustc
                PAHOLE=$GITHUB_WORKSPACE/kernel_workspace/prebuilts/kernel-build-tools/linux-x86/bin/pahole
                LD=ld.lld  HOSTLD=ld.lld O=out KCFLAGS+=-O2 KCFLAGS_PERF+=-O3
        run: |
          export PATH=/usr/lib/ccache:$GITHUB_WORKSPACE/kernel_workspace/kernel_platform/prebuilts/clang/host/linux-x86/clang-r510928/bin:$PATH
          make -j$(nproc --all) ${args} gki_defconfig all
          
      - name: Apply KernelPatch for KPM
        if: ${{ inputs.enable_feature_kpm }}
        working-directory: kernel_workspace/kernel_platform/common/out/arch/arm64/boot
        run: |
          curl -LO https://github.com/SukiSU-Ultra/SukiSU_KernelPatch_patch/releases/download/0.12.0/patch_linux
          chmod +x patch_linux
          ./patch_linux
          mv oImage Image
         
      - name: Make AnyKernel3
        run: |
          git clone https://github.com/Kernel-SU/AnyKernel3.git --depth=1      
          rm -rf ./AnyKernel3/.git
          rm -rf ./AnyKernel3/push.sh
          cp ./kernel_workspace/kernel_platform/common/out/arch/arm64/boot/Image ./AnyKernel3/

      - name: Upload AnyKernel3
        uses: actions/upload-artifact@v4
        with:
         name: SukiSU_${{ env.KSUVER }}_OnePlus_13T
         path: ./AnyKernel3/*
